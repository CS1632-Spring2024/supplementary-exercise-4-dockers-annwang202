// Generated by Selenium IDE
package edu.pitt.cs;

import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import static org.junit.Assert.*;

import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;
import java.util.*;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class D3Test {

  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;

  @Before
  public void setUp() {
    ChromeOptions options = new ChromeOptions();
    options.addArguments("--headless");
    driver = new ChromeDriver(options);
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();

    // Set text fixture
    driver.get("http://localhost:8080");
    js.executeScript(
      "javascript:{document.cookie = \"1=false\";document.cookie = \"2=false\";document.cookie = \"3=false\";void(0)}"
    );
  }

  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void tEST1LINKS() {
    {
      WebElement element = driver.findElement(By.xpath("//li[8]/a"));
      String attribute = element.getAttribute("href");
      vars.put("href", attribute);
    }
    assertEquals(vars.get("href").toString(), "http://localhost:8080/reset");
  }
  @Test
  public void tEST2RESET() {
    js.executeScript("document.cookie = \"1=true\";document.cookie = \"2=true\";document.cookie = \"3=true\";");
    driver.findElement(By.xpath("//a[contains(text(),\'Reset\')]")).click();
    assertEquals("ID 1. Jennyanydots",driver.findElement(By.xpath("//div[@id=\'listing\']/ul/li")).getText());
    assertEquals("ID 2. Old Deuteronomy", driver.findElement(By.xpath("//div[@id=\'listing\']/ul/li[2]")).getText());
    assertEquals("ID 3. Mistoffelees",driver.findElement(By.xpath("//div[@id=\'listing\']/ul/li[3]")).getText());
  }
  @Test
  public void tEST3CATALOG() {
    driver.findElement(By.xpath("//a[contains(text(),\'Catalog\')]")).click();
    {
      WebElement element = driver.findElement(By.xpath("//li[2]/img"));
      String attribute = element.getAttribute("src");
      vars.put("img_src", attribute);
    }
    assertEquals("http://localhost:8080/images/cat2.jpg",vars.get("img_src").toString());
  }
  @Test
  public void tEST4LISTING() {
    driver.findElement(By.xpath("//a[contains(text(),\'Catalog\')]")).click();
    vars.put("listCount", driver.findElements(By.xpath("//*[@id=\"listing\"]/ul/li")).size());
    assertEquals("3", vars.get("listCount").toString());
    assertEquals("ID 3. Mistoffelees", driver.findElement(By.xpath("//div[@id=\'listing\']/ul/li[3]")).getText());
  }
  @Test
  public void tEST5RENTACAT() {
    driver.findElement(By.xpath("//a[contains(text(),\'Rent-A-Cat\')]")).click();
    {
      List<WebElement> elements = driver.findElements(By.xpath("//button[contains(.,\'Rent\')]"));
      assert(elements.size() > 0);
    }
    {
      List<WebElement> elements = driver.findElements(By.xpath("//button[contains(.,\'Return\')]"));
      assert(elements.size() > 0);
    }
  }
  @Test
  public void tEST6RENT() {
    driver.findElement(By.xpath("//a[contains(text(),\'Rent-A-Cat\')]")).click();
    driver.findElement(By.id("rentID")).click();
    driver.findElement(By.id("rentID")).sendKeys("1");
    driver.findElement(By.xpath("//button[contains(.,\'Rent\')]")).click();
    assertEquals("Rented out",driver.findElement(By.xpath("//div[@id=\'listing\']/ul/li")).getText());
    assertEquals("ID 2. Old Deuteronomy",driver.findElement(By.xpath("//div[@id=\'listing\']/ul/li[2]")).getText());
    assertEquals("ID 3. Mistoffelees",driver.findElement(By.xpath("//div[@id=\'listing\']/ul/li[3]")).getText());
    assertEquals("Success!",driver.findElement(By.id("rentResult")).getText());
  }

  @Test
  public void tEST7RETURN() {
    js.executeScript("javascript:{document.cookie = \"2=true\";void(0)}");
    driver.findElement(By.linkText("Rent-A-Cat")).click();
    driver.findElement(By.id("returnID")).sendKeys("2");
    WebElement returnButton = driver.findElement(
      By.xpath("//button[contains(.,\'Return\')]")
    );
    returnButton.click();

    String firstItemText = driver
      .findElement(By.cssSelector(".list-group-item:nth-child(1)"))
      .getText();

    String secondItemText = driver
      .findElement(By.cssSelector(".list-group-item:nth-child(2)"))
      .getText();

    String thirdItemText = driver
      .findElement(By.cssSelector(".list-group-item:nth-child(3)"))
      .getText();

    String returnResultText = driver
      .findElement(By.id("returnResult"))
      .getText();

    assertEquals("ID 1. Jennyanydots", firstItemText);
    assertEquals("ID 2. Old Deuteronomy", secondItemText);
    assertEquals("ID 3. Mistoffelees", thirdItemText);
    assertEquals("Success!", returnResultText);
  }

  @Test
  public void tEST8FEEDACAT() {
    driver.findElement(By.linkText("Feed-A-Cat")).click();
    String feedCatText = driver
      .findElement(By.xpath("//button[contains(.,'Feed')]"))
      .getText();

    assertEquals("Feed", feedCatText);
  }

  @Test
  public void tEST9FEED() {
    driver
      .findElement(By.xpath("//a[contains(text(),\'Feed-A-Cat\')]"))
      .click();
    driver.findElement(By.xpath("//button[contains(.,\'Feed\')]")).click();
    driver.findElement(By.xpath("//input[@id=\'catnips\']")).sendKeys("6");
    driver.findElement(By.xpath("//button[contains(.,\'Feed\')]")).click();

    String feedResultText = driver
      .findElement(By.xpath("//div[@id=\'feedResult\']"))
      .getText();

    assertEquals("Nom, nom, nom.", feedResultText);
  }

  @Test
  public void tEST10GREETACAT() {
    driver
      .findElement(By.xpath("//a[contains(text(),\'Greet-A-Cat\')]"))
      .click();

    String greetCatText = "Meow!Meow!Meow!";
    List<WebElement> list = driver.findElements(
      By.xpath("//*[contains(text(),'" + greetCatText + "')]")
    );
    assertTrue("Text not found!", list.size() > 0);
  }

  @Test
  public void tEST11GREETACATWITHNAME() {
    driver.get("http://localhost:8080/greet-a-cat/Jennyanydots");

    String greetingsFromJennyanydots = "Meow! from Jennyanydots.";
    List<WebElement> list = driver.findElements(
      By.xpath("//*[contains(text(),'" + greetingsFromJennyanydots + "')]")
    );
    assertTrue("Text not found!", list.size() > 0);
  }
}
